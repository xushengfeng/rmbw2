@font-face {
    font-family: "Noto Color Emoji";
    src: url(../assets/NotoColorEmoji.ttf);
}

:root {
    --bg: #fff;
    --bg1: #fff9;
    --blur: blur(10px);
    --hover-color: #dfdfdf;
    --box-shadow: 0 0 4px #0002;
    --transition: 0.4s cubic-bezier(0.25, 1, 0.5, 1);
    --border-radius: 8px;
    --height: 40px;
    --color: #000;
    --font-size: 16px;
    --main-bar-size: 24px;
    --icon-color: none;
    --icon-color1: invert(1);
    --b-button: 32px;
    --o-padding: 8px;
    --font-size: 16px;
    --font-family: serif;
    --size0: 32px;
}

:root[data-theme="dark"] {
    --bg: #000;
    --bg1: #000a;
    --color: #cacaca;
    --hover-color: #303030;
    --box-shadow: 0 0 4px #fff7;
    & .icon {
        filter: invert(0.78);
    }
}
:root[data-theme="classical"] {
    --bg: #eceae6;
    --bg1: #eceae6aa;
}

@media (prefers-color-scheme: dark) {
    :root[data-theme="auto"] {
        --bg: #000;
        --bg1: #000a;
        --color: #cacaca;
        --hover-color: #303030;
        --box-shadow: 0 0 4px #fff7;
        & .icon {
            filter: invert(0.78);
        }
    }
    ::-webkit-scrollbar-thumb {
        border-radius: 10px;
        background: #444;
    }
    ::-webkit-scrollbar-thumb:hover {
        background: #555;
    }
    kbd {
        box-shadow: 0 5px #fff4;
        background: linear-gradient(315deg, #191919, #000);
    }
}

html,
body {
    margin: 0;
    font-family: sans-serif;
    color: var(--color);
}

.icon {
    position: absolute;
    pointer-events: none;
    left: 0;
    top: 0;
    filter: var(--icon-color);
    user-select: none;
}

::-webkit-scrollbar {
    width: 8px;
    height: 8px;
}
::-webkit-scrollbar-thumb {
    border-radius: 10px;
    background: #ddd;
}
::-webkit-scrollbar-thumb:hover {
    background: #ccc;
}
::-webkit-scrollbar-track {
    background: #0000;
}
::-webkit-scrollbar-button {
    height: 8px;
    width: 8px;
    background-color: #0000;
}
::-webkit-scrollbar-corner {
    background-color: #0000;
}

button {
    outline: none;
    color: var(--color);
    font-family: var(--main-font);
    border-radius: var(--border-radius);
    background-color: var(--bg);
    height: var(--height);
    border: none;
    margin: 0px;
    padding: 0;
    transition: var(--transition);
    width: var(--b-button);
    height: var(--b-button);
    position: relative;
}
button:hover {
    background-color: var(--hover-color);
}
button > .icon {
    width: var(--b-button);
}

input {
    outline: none;
    background-color: #0000;
    color: var(--color);
    border: none;
    border-bottom: 1px solid var(--color);
}

select {
    outline: none;
    border-radius: var(--border-radius);
    background-color: var(--bg);
    height: var(--height);
    border: none;
    outline: none;
    margin: 0px;
    color: var(--color);
    padding: 0 var(--o-padding) 0 var(--o-padding);
    transition: var(--transition);
    user-select: none;
}

select:hover {
    background-color: var(--hover-color);
}
option {
    background-color: var(--bg);
}
textarea {
    outline: none;
    background-color: #0000;
    color: var(--color);
}

[popover],
dialog {
    color: var(--color);
    background-color: var(--bg1);
    backdrop-filter: var(--blur);
    border: 1px solid var(--color);
    padding: 1rem;
    border-radius: 1rem;
    outline: none;
}
[popover] {
    border: 1px solid var(--color);
}

body::-webkit-scrollbar {
    display: none;
}
html,
body {
    margin: 0;
    overflow: hidden;
}

:is(div, button):has(> .icon) {
    height: var(--size0);
    width: var(--size0);
    position: relative;
}
:is(div, button) > .icon {
    height: var(--size0);
    width: var(--size0);
}

.hiden {
    transform: translateX(calc(100% - var(--main-bar-size)));
}

.main {
    height: 100dvh;
    position: absolute;
    top: 0;
    display: flex;
    transition: 0.4s;
    overflow: hidden;
}

#main {
    min-width: 100vw;
    background-color: var(--bg);
}

.to_visit,
.to_visit1 {
    position: relative;
}
:is(.to_visit, .to_visit1)::after {
    content: "";
    position: absolute;
    width: 6px;
    height: 6px;
    background-color: #2735bb;
    border-radius: 50%;
}
.to_visit::after {
    top: 0px;
    right: 0px;
}
.to_visit1::after {
    top: -3px;
    right: -3px;
}

.selected_item {
    color: #2735bb;
}

#book_nav {
    position: absolute;
    top: var(--size0);
    width: 20vw;
    left: -20vw;
    height: calc(100dvh - var(--size0));
    display: flex;
    flex-direction: column;
    z-index: 2;
    background-color: var(--bg1);
    backdrop-filter: var(--blur);
    transition: var(--transition);
    border-radius: 0 1rem 1rem 0;
    & > :nth-child(2) {
        & > div {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    }
}
.book_nav_show {
    left: 0 !important;
    box-shadow: var(--box-shadow);
}

#book_buttons {
    display: flex;
    width: 100%;
}
#book_buttons > div:has(.icon) {
    height: var(--size0);
    width: var(--size0);
    position: relative;
}
#change_edit {
    height: var(--size0);
    width: var(--size0);
    position: relative;
}
#book_buttons > div > .icon {
    height: var(--size0);
    width: var(--size0);
}
#book_name {
    flex-grow: 1;
    line-height: var(--size0);
}

.change_style_bar {
    margin: 0;
    top: var(--size0);
    left: auto;
    right: var(--size0);
    border: 1px solid var(--color);
    background-color: var(--bg1);
    backdrop-filter: var(--blur);
    transition: var(--transition);
    border-radius: 1rem;
    padding: 4px;
    flex-direction: column;
    gap: 4px;
    &:popover-open {
        display: flex;
    }
    & > div {
        display: flex;
        & > span {
            width: 2rem;
            text-align: center;
        }
    }
}

.font_list {
    position: relative;
    overflow: scroll;
    width: 240px;
    height: 200px;
    white-space: nowrap;
    background-color: var(--bg1);
    backdrop-filter: var(--blur);
    transition: var(--transition);
    border-radius: 1rem;
    border: 1px solid var(--color);
}

.theme_select {
    & input {
        display: none;
    }
    & label {
        padding: 4px;
        border-radius: 8px;
        border: transparent 1px solid;
        &:has(input:checked) {
            border: var(--color) 1px dashed;
        }
    }
    @media (prefers-color-scheme: dark) {
        & label:has(input[value="auto"]) {
            background-color: #000 !important;
            color: #cacaca !important;
            &:has(input:checked) {
                border: var(--color) 1px dashed;
            }
        }
    }
}

#book_content_container {
    --content-width: 60em;
    --line-height: 1.2em;
    --paper-bg: url("../assets/Texture.png") repeat;
    background: var(--paper-bg);
    background-size: 400px 400px;
    background-attachment: local;
    position: relative;
    height: calc(100dvh - var(--size0));
    box-sizing: border-box;
    padding: 1rem 24px calc(100dvh - var(--size0));
    overflow-y: scroll;
    overflow-x: hidden;
    scroll-behavior: smooth;
    & > :first-child {
        display: block;
        margin: 0 auto;
        font-size: var(--font-size);
        max-width: var(--content-width);
        transition: var(--transition);
        font-family: var(--font-family);
        position: relative;

        border: none;
        width: 100%;

        & > p {
            line-height: var(--line-height);
            transition: var(--transition);
        }

        &:not(textarea) {
            user-select: none;
            & p > span > span {
                cursor: pointer;
                &:hover {
                    text-decoration: underline wavy #999;
                }
            }
            & p > span[data-trans] {
                display: inline;
                &::after {
                    content: attr(data-trans);
                    display: block;
                }
            }
        }

        & > :has(:is([data-play], [data-play-l])) {
            position: relative;
            &:hover {
                > :is([data-play], [data-play-l]) {
                    opacity: 1;
                }
            }
        }
        & > * > :is([data-play], [data-play-l]) {
            position: absolute;
            opacity: 0.2;
            transition: var(--transition);
        }
        & > * > [data-play] {
            left: calc(-1 * var(--size0));
        }
        & > * > [data-play-l] {
            left: calc(-1 * var(--size0));
            top: var(--size0);
        }
    }
    & > textarea {
        height: calc(100dvh - 96px);
    }
    &:has(table) {
        & p {
            margin: 0;
            user-select: none;
            font-family: var(--font-family);
            left: calc((100dvw - var(--content-width)) / 2) !important;
        }
        & .words_book_top {
            position: sticky;
            top: 0;
            z-index: 1;
            background-color: var(--bg1);
            backdrop-filter: var(--blur);
            & .sort_words {
                display: flex;
                gap: 4px;
                user-select: none;
                cursor: pointer;
            }
        }
        & .ignore {
            opacity: 0.5;
        }
        & .learn {
            color: green;
        }
    }
}
.mark_word {
    text-decoration: underline wavy #999 !important;
}
.tmp_mark_word {
    text-decoration: underline color-mix(in srgb, #999 50%, var(--bg));
}
.flash_word {
    text-decoration: underline wavy #2735bb;
}

.context_start,
.context_end {
    position: absolute;
    width: 16px;
    height: 16px;
    background-color: #fff;
    border-radius: 50%;
    border: #000 1px solid;
    transform: translate(-50%, -50%);
    touch-action: none;
}
.context_start::after {
    content: "";
    position: absolute;
    top: 16px;
    left: 7px;
    width: 2px;
    height: 1em;
    background-color: var(--color);
}
.context_end::after {
    content: "";
    position: absolute;
    top: -1em;
    left: 7px;
    width: 2px;
    height: 1em;
    background-color: var(--color);
}

#book_content .words_sum {
    position: sticky;
    top: 0;
    background-color: var(--bg1);
    backdrop-filter: var(--blur);
    z-index: 1;
    & progress {
        width: 2rem;
    }
}

#pTTSp {
    position: fixed;
    bottom: var(--size0);
    margin: auto 0;
    background: var(--bar-bg);
    backdrop-filter: var(--blur);
    display: none;
    align-items: center;
    justify-content: center;
    & > audio {
        height: var(--size0);
        display: block;
    }
}

.pTTS_show {
    display: flex !important;
}

#books {
    & > :first-child {
        gap: 4px;
        & > div {
            padding: 4px;
        }
    }
    & > .books {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 8px;
        overflow: scroll;
        padding: 4px;
        max-height: 80dvh;
        & > div:not(:has(> .icon)) {
            display: flex;
            flex-direction: column;
            align-items: center;
            & > :nth-child(1) {
                border: none;
                width: 100px;
                aspect-ratio: calc(1 / 1.414);
                border-radius: 4px;
                box-shadow: var(--box-shadow);
                font-size: 2em;
                text-wrap: balance;
                overflow: hidden;
                color: #0006;
                cursor: pointer;
                & > * {
                    background-color: #dfdfdf;
                    width: 100%;
                    height: 100%;
                }
            }
            & > :nth-child(2) {
                max-width: 100px;
                overflow-wrap: break-word;
            }
        }
        @media (max-width: calc(100px * 4 + 8px * 3 + 2em + 6px)) {
            grid-template-columns: repeat(3, 1fr);
        }
        @media (max-width: calc(100px * 3 + 8px * 2 + 2em + 6px)) {
            grid-template-columns: repeat(2, 1fr);
        }
    }
    &::backdrop {
        backdrop-filter: var(--blur);
    }
}

.show_online_book {
    & > :nth-child(2) {
        display: none !important;
    }
    & > :nth-child(3) {
        display: grid !important;
    }
}

.play_list {
    & > :first-child {
        display: flex;
        width: 80dvw;
        & > textarea {
            line-height: var(--size0);
            white-space: nowrap;
            flex-grow: 1;
            border: none;
            overflow-y: hidden;
        }
        & > div {
            display: flex;
            flex-direction: column;
        }
    }
    & > :nth-child(2) {
        display: flex;
        & > button {
            display: block;
            width: auto;
            min-width: var(--size0);
        }
    }
}

#dic {
    position: absolute;
    top: 0;
    width: 100%;
    max-height: min(600px, 100dvh - var(--size0));
    display: flex;
    flex-direction: column;
    background-color: var(--bg1);
    backdrop-filter: var(--blur);
    transition: var(--transition);
    border-radius: 1rem;
    padding: 1rem;
    box-sizing: border-box;
    opacity: 0;
    visibility: hidden;
    border: 1px solid var(--color);
    & input {
        font-family: var(--font-family);
        font-size: var(--font-size);
    }
}

.dic_show {
    opacity: 1 !important;
    visibility: visible !important;
}

.dic_sentence {
    & > :is(:nth-child(2), :nth-child(4), :nth-child(5)) {
        display: none !important;
    }
}

.more_words {
    display: flex;
    gap: 4px;
}
.more_words > span {
    cursor: pointer;
    border-radius: 4px;
    border: dashed 1px var(--color);
}

.translate {
    opacity: 0.6;
    margin: 0;
}
div:has(> .translate) > :not(.translate) {
    margin: 4px 0;
}

.dic_sen {
    & > div > p > :last-child {
        padding-left: 2em;
        opacity: 0.5;
    }
}

.dic_details > div {
    border-radius: 0.4rem;
    padding: 4px;
    border: solid 1px transparent;
}
.dic_details > div:hover {
    border: dashed 1px var(--color);
}
.dic_details > div:has(input[type="radio"]:checked) {
    border: dashed 1px var(--color);
}
.dic_details > div > input[type="radio"] {
    display: none;
}

.hide_means > div:not(:has(input[type="radio"]:checked)) {
    display: none;
}

.note_dialog {
    margin: 3rem;
    width: auto;
    height: auto;
    display: flex;
    flex-direction: column;
    & > p {
        font-family: var(--font-family);
        font-size: var(--font-size);
        max-height: 2em;
        white-space: nowrap;
        overflow-x: auto;
    }
    & > textarea {
        flex-grow: 1;
        overflow: scroll;
        border: none;
        resize: none;
        font-family: var(--font-family);
        font-size: var(--font-size);
    }
    & > :last-child {
        display: flex;
        & > button {
            display: block;
            width: auto;
            height: var(--size0);
            padding: 0 4px;
            min-width: var(--size0);
        }
    }
    &::backdrop {
        backdrop-filter: var(--blur);
    }
}

.ai_dialog {
    margin: 0;
    width: 400px;
    height: 400px;
    border: 1px solid var(--color) !important;
    display: flex;
    flex-direction: column;
    box-sizing: border-box;
    & > textarea {
        flex-grow: 1;
        overflow: scroll;
        border: none;
        resize: none;
        font-family: var(--font-family);
        font-size: var(--font-size);
    }
    & > :last-child {
        display: flex;
        & > button {
            display: block;
            width: auto;
            height: var(--size0);
            padding: 0 4px;
            min-width: var(--size0);
        }
    }
    &::backdrop {
        background: #0001;
    }
}

.dic_dialog {
    margin: 0;
    width: 400px;
    height: 400px;
    border: 1px solid var(--color) !important;
    display: flex;
    flex-direction: column;
    box-sizing: border-box;
    font-family: var(--font-family);
    font-size: var(--font-size);
    & > :nth-child(1) {
        display: flex;
        gap: 4px;
        overflow-x: scroll;
        & > a {
            color: var(--color);
        }
    }
    & > :nth-child(2) {
        display: flex;
        gap: 4px;
        overflow-x: scroll;
    }
    & > :nth-last-child(2) {
        flex-grow: 1;
        overflow-y: scroll;
        display: flex;
        flex-direction: column;
        gap: 4px;
        & > label {
            display: block;
            cursor: pointer;
            border: transparent 1px dashed;
            & > input {
                display: none;
            }
            & > p {
                margin: 8px;
            }
        }
        & > label:has(> input:checked) {
            border: var(--color) 1px dashed;
            border-radius: 1rem;
        }
    }
    &::backdrop {
        background: #0001;
    }
}

.tmp_dic {
    max-height: 80dvh;
    max-width: 80dvw;
    overflow: scroll;
    & > :nth-child(1) {
        display: flex;
        gap: 1em;
        overflow-x: scroll;
    }
    & > :nth-child(2) {
        display: flex;
        & > :first-child {
            flex-shrink: 0;
        }
    }
}

#mark_word_list {
    position: fixed;
    display: flex;
    flex-direction: column;
    right: -100%;
    top: var(--size0);
    height: calc(100dvh - var(--size0));
    width: 40vw;
    border-radius: 1rem 0 0 1rem;
    box-sizing: border-box;
    padding: 1rem;
    background: var(--bar-bg);
    backdrop-filter: var(--blur);
    box-shadow: var(--box-shadow);
    transition: var(--transition);
    font-family: var(--font-family);
    user-select: none;

    & > :nth-child(1) {
        display: flex;
        & > button {
            display: block;
            width: auto;
            min-width: var(--size0);
        }
    }

    & > :nth-child(2) {
        position: relative;
        overflow-y: scroll;
        flex-grow: 1;

        & > div {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            max-width: calc(40vw - 16px * 2);
        }
    }
}

.show_mark_word_list {
    right: 0 !important;
    box-shadow: var(--shadow);
}

.words_select {
    display: flex;
    flex-direction: column;
    align-items: end;
    & > div {
        max-height: 80dvh;
        display: flex;
        flex-direction: column;
        overflow: scroll;
    }
}

#review {
    position: absolute;
    top: 100dvh;
    z-index: 1;
    background-color: var(--bg1);
    backdrop-filter: var(--blur);
    transition: var(--transition);
}
.review_show {
    top: var(--size0) !important;
}
#review_buttons {
    display: flex;
}
#review_mode input {
    display: none;
}
#review_mode > label {
    border-radius: 4px;
    border: dashed 1px transparent;
}
#review_mode > label:has(input:checked) {
    border: dashed 1px var(--color);
}

#review_buttons > div:has(.icon) {
    height: var(--size0);
    width: var(--size0);
    position: relative;
}
#review_buttons > div > .icon {
    height: var(--size0);
    width: var(--size0);
}

#review {
    width: 100vw;
    height: calc(100dvh - var(--size0));
    display: flex;
    flex-direction: column;
}
#review_list {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    overflow: hidden;
}
#review_view {
    overflow-y: auto;
    flex-grow: 1;
    display: flex;
    max-height: calc(100dvh - 2 * var(--size0));
    font-family: var(--font-family);
    font-size: var(--font-size);
}
.review_word {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
}
.review_word > :nth-child(2) {
    flex-grow: 1;
    overflow: scroll;
}
.review_word > :nth-child(3) {
    overflow: scroll;
}
.review_word > :last-child {
    display: flex;
    gap: 8px;
    justify-content: center;
}

#review_l {
    height: calc(100dvh - 32px);
    overflow: auto;
}
#review_l > div {
    display: flex;
    justify-content: space-between;
    align-items: center;
}
#review_l > div > span:nth-child(1) {
    display: flex;
    overflow-x: auto;
    gap: 4px;
}

.review_spell {
    flex-grow: 1;
    touch-action: none;
    & .diff_add {
        color: color-mix(in srgb, #0f0 80%, var(--color));
    }
    & .diff_remove {
        color: color-mix(in srgb, #f00 80%, var(--color));
    }
    & .diff_exchange {
        color: color-mix(in srgb, #f00 80%, var(--color));
        & > :nth-child(1) {
            border-right: 1px solid var(--color);
            border-top: 1px solid var(--color);
        }
        & > :nth-child(2) {
            border-bottom: 1px solid var(--color);
        }
    }
    & .mark_word {
        color: transparent;
    }
}

.spell_sen_word_show {
    & .mark_word {
        color: inherit;
    }
}

.spell_input {
    font-size: 2em;
    margin: auto;
}

.spell_write {
    position: fixed;
    top: var(--size0);
    height: 2em;
    width: 100dvw;
    & > :nth-child(1) {
        position: absolute;
        left: 0;
        top: 4px;
        pointer-events: none;
    }
    & > :nth-child(2) {
        position: absolute;
        left: 0;
        top: 4px;
    }
    & > :nth-child(3) {
        position: absolute;
        right: 0;
        top: 4px;
    }
}

.hg-theme-default {
    touch-action: manipulation;
    user-select: none;
    width: 100%;
    background: color-mix(in srgb, var(--bg) 94%, var(--color));
    padding: 4px;
    box-sizing: border-box;
    font-family: "Noto Color Emoji";

    & .hg-row {
        display: flex;
        &:not(:last-child) {
            margin-bottom: 5px;
        }
        & .hg-button-container,
        & .hg-button:not(:last-child) {
            margin-right: 5px;
        }
        & > div:last-child {
            margin-right: 0;
        }
        & .hg-button-container {
            display: flex;
        }
    }
    & .hg-button {
        border-width: 0;
        font-size: inherit;
        outline: 0;
        display: inline-block;
        flex-grow: 1;
        align-items: center;
        background: var(--bg);
        color: var(--color);
        border-radius: 5px;
        box-sizing: border-box;
        cursor: pointer;
        display: flex;
        height: 40px;
        justify-content: center;
        padding: 5px;
        & span {
            pointer-events: none;
        }
        &.hg-standardBtn {
            width: 20px;
        }
        &.hg-activeButton {
            background: color-mix(in srgb, var(--bg) 90%, var(--color));
        }
    }
    &.hg-layout-numeric .hg-button {
        align-items: center;
        display: flex;
        height: 60px;
        justify-content: center;
        width: 33.3%;
    }
}

.plot {
    max-width: 90dvw;
    & > div {
        width: 100%;
        overflow: scroll;
    }
}

.oneD_plot {
    display: inline-flex;
    border: solid 1px transparent;
    transition: var(--transition);
    &:hover {
        border: solid 1px var(--color);
    }
}

.cal_plot {
    display: grid;
    grid-template-rows: repeat(7, 16px);
    grid-template-columns: repeat(53, 16px);
    grid-auto-flow: column;
    gap: 2px;
    & > div {
        border: 1px solid var(--color);
        border-radius: 2px;
    }
}

#setting {
    overflow: scroll;
    background-color: var(--bg1);
    backdrop-filter: var(--blur);
    transition: var(--transition);
    border: none;
    margin-top: var(--size0);
    max-height: calc(100dvh - var(--size0));
    box-sizing: border-box;

    & > .setting_dic {
        & ul {
            padding-left: 0;
        }
        & li {
            display: flex;
            align-items: center;
            & > span {
                cursor: pointer;
            }
            & > button {
                --size0: 20px;
            }
        }
        & > div {
            --size0: 20px;
        }
    }
}

#menu {
    position: fixed;
    background-color: var(--bg1);
    backdrop-filter: var(--blur);
    transition: var(--transition);
    padding: 4px;
    margin: 0;
    max-width: 64px !important;
    min-width: none !important;
    border: none;
    box-shadow: var(--box-shadow);
    border-radius: 4px;
}
#menu > * {
    cursor: pointer;
    user-select: none;
}

#prompt {
    position: fixed;
    background-color: var(--bg1);
    backdrop-filter: var(--blur);
    transition: var(--transition);
    padding: 1rem;
    border: none;
    box-shadow: var(--box-shadow);
    border-radius: 1rem;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(3, 1fr);
    gap: 4px;
}

#prompt > span {
    grid-area: 1 / 1 / 2 / 3;
}
#prompt > input {
    grid-area: 2 / 1 / 3 / 3;
}
#prompt > .cancel_b {
    grid-area: 3 / 1 / 4 / 2;
    width: 100%;
}
#prompt > .ok_b {
    grid-area: 3 / 2 / 4 / 3;
    width: 100%;
}

.toast {
    position: fixed;
    margin: 0;
    left: auto;
    top: auto;
    bottom: 16px;
    right: 16px;
    min-width: 100px;
    display: flex;
    flex-direction: column;
    border: none;
    padding: 0;
    gap: 4px;
    border-radius: 0;
    padding: 4px;
    & > * {
        background-color: var(--bg1);
        backdrop-filter: var(--blur);
        padding: 4px;
        border-radius: 4px;
        box-shadow: var(--box-shadow);
    }
}

.docs {
    overflow: scroll;
    height: 100dvh;
    padding: 4rem;
    box-sizing: border-box;
}
